{"ast":null,"code":"var _jsxFileName = \"/Users/ss/Desktop/Projects/Web/wordle2/src/Components/Header.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { AppBar } from \"@material-ui/core\";\nimport { Toolbar } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { Settings } from \"@material-ui/icons\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { createTheme } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Styles = makeStyles(_c = theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  customColor: {\n    // or hex code, this is normal CSS background-color\n    backgroundColor: green[500]\n  },\n  customHeight: {\n    minHeight: 200\n  },\n  offset: theme.mixins.toolbar\n}));\n_c2 = Styles;\nconst HeaderTheme = createTheme({\n  typography: {\n    allVariants: {\n      fontFamily: 'Roboto Condensed',\n      textTransform: 'none',\n      fontSize: 40\n    }\n  }\n});\n\nfunction Header() {\n  const Classes = Styles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"HeaderClass\",\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      color: \"transparent\",\n      elevation: \"10\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          onClick: () => alert('Menu'),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: HeaderTheme,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: Classes.title,\n            children: \"WORDLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"settings\",\n          onClick: () => alert('Settings'),\n          children: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = Header;\nexport default Header;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Styles$makeStyles\");\n$RefreshReg$(_c2, \"Styles\");\n$RefreshReg$(_c3, \"Header\");","map":{"version":3,"sources":["/Users/ss/Desktop/Projects/Web/wordle2/src/Components/Header.js"],"names":["React","makeStyles","green","AppBar","Toolbar","Typography","IconButton","Button","Settings","ThemeProvider","createTheme","MenuIcon","Styles","theme","menuButton","marginRight","spacing","title","flexGrow","customColor","backgroundColor","customHeight","minHeight","offset","mixins","toolbar","HeaderTheme","typography","allVariants","fontFamily","textTransform","fontSize","Header","Classes","alert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,SAASC,KAAT,QAAsB,0BAAtB;AAEA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,MAAM,GAAGX,UAAU,MAAEY,KAAD,KAAY;AAClCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAe,CAAf;AADH,GADsB;AAIlCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAJ2B;AAOlCC,EAAAA,WAAW,EAAE;AACX;AACAC,IAAAA,eAAe,EAAElB,KAAK,CAAE,GAAF;AAFX,GAPqB;AAWlCmB,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE;AADC,GAXoB;AAclCC,EAAAA,MAAM,EAAEV,KAAK,CAACW,MAAN,CAAaC;AAda,CAAZ,CAAD,CAAzB;MAAMb,M;AAkBN,MAAMc,WAAW,GAAGhB,WAAW,CAAC;AAC9BiB,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAE;AACXC,MAAAA,UAAU,EAAE,kBADD;AAEXC,MAAAA,aAAa,EAAE,MAFJ;AAGXC,MAAAA,QAAQ,EAAE;AAHC;AADH;AADkB,CAAD,CAA/B;;AAUA,SAASC,MAAT,GAAkB;AACd,QAAMC,OAAO,GAAGrB,MAAM,EAAtB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,aAAd;AAA4B,MAAA,SAAS,EAAC,IAAtC;AAAA,6BAEI,QAAC,OAAD;AAAA,gCACI,QAAC,UAAD;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,KAAK,EAAC,SAFV;AAGI,wBAAW,MAHf;AAII,UAAA,OAAO,EAAG,MAAMsB,KAAK,CAAE,MAAF,CAJzB;AAAA,iCAMI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI,QAAC,aAAD;AAAe,UAAA,KAAK,EAAGR,WAAvB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,SAAS,EAAGO,OAAO,CAAChB,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAiBI,QAAC,UAAD;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,KAAK,EAAC,SAFV;AAGI,wBAAW,UAHf;AAII,UAAA,OAAO,EAAG,MAAMiB,KAAK,CAAE,UAAF,CAJzB;AAAA,iCAMI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;MAvCQF,M;AAyCT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core\";\n\nimport { green } from \"@material-ui/core/colors\";\n\nimport { AppBar } from \"@material-ui/core\";\nimport { Toolbar } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\n\nimport { Settings } from \"@material-ui/icons\";\n\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { createTheme } from \"@material-ui/core\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst Styles = makeStyles((theme) => ({\n    menuButton: {\n      marginRight: theme.spacing( 2 )\n    },\n    title: {\n      flexGrow: 1\n    },\n    customColor: {\n      // or hex code, this is normal CSS background-color\n      backgroundColor: green[ 500 ]\n    },\n    customHeight: {\n      minHeight: 200\n    },\n    offset: theme.mixins.toolbar\n}));\n\n\nconst HeaderTheme = createTheme({\n  typography: {\n    allVariants: {\n      fontFamily: 'Roboto Condensed',\n      textTransform: 'none',\n      fontSize: 40,\n    },\n  },\n});\n\nfunction Header() {\n    const Classes = Styles();\n\n    return(\n        <div className=\"HeaderClass\">\n            <AppBar color='transparent' elevation='10'>\n\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                        onClick={ () => alert( 'Menu' ) }\n                    >\n                        <MenuIcon/>\n                    \n                    </IconButton>\n\n                    <ThemeProvider theme={ HeaderTheme }>\n                      <Typography variant=\"h6\" className={ Classes.title }>WORDLE</Typography>\n                    </ThemeProvider>\n\n                    {/* <Button color=\"primary\" variant='contained'>SIGN IN</Button> */}\n\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"settings\"\n                        onClick={ () => alert( 'Settings' ) }\n                    >\n                        <Settings/>\n                    \n                    </IconButton>\n                </Toolbar>\n                \n            </AppBar>\n\n        </div>\n    )\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}